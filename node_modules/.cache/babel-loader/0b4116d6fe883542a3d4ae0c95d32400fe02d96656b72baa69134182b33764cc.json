{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = cartData => {\n  return dispatch => {\n    dispatch(dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    })));\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cartData","dispatch","uiActions","showNotification","status","message","cartActions","actions"],"sources":["/Users/priyanshugupta/Desktop/contact/reduxstart/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice= createSlice({\n    name:\"cart\",\n    initialState:{\n        items:[],\n        totalQuantity:0,\n    },\n    reducers:{\n        addItemToCart(state,action){\n            const newItem=action.payload;\n            const existingItem=state.items.find(item=>item.id===newItem.id);\n            state.totalQuantity++;\n            if(!existingItem){\n                state.items.push({id:newItem.id,price:newItem.price,quantity:1,totalPrice:newItem.price,name:newItem.title});\n            }else{\n                existingItem.quantity++;\n                existingItem.totalPrice=existingItem.totalPrice+newItem.price;\n            }\n        },\n        removeItemFromCart(state,action){\n            const id=action.payload;\n            const existingItem=state.items.find(item=>item.id===id);\n            state.totalQuantity--;\n            if(existingItem.quantity===1){\n                state.items=state.items.filter(item=>item.id!==id);\n            }\n            else{\n                existingItem.quantity--;\n                existingItem.totalPrice=existingItem.totalPrice-existingItem.price;\n            }\n        }\n    }\n});\n\nconst sendCartData=(cartData)=>{\n    return (dispatch)=>{\n        dispatch(\n            dispatch(uiActions.showNotification({\n                status:\"pending\",\n                title:\"Sending...\",\n                message:\"Sending cart data!\"\n              }))\n        );\n    }\n}\nexport const cartActions=cartSlice.actions;\nexport default cartSlice;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,SAAS,GAAED,WAAW,CAAC;EACzBE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAC;IACTC,KAAK,EAAC,EAAE;IACRC,aAAa,EAAC;EAClB,CAAC;EACDC,QAAQ,EAAC;IACLC,aAAaA,CAACC,KAAK,EAACC,MAAM,EAAC;MACvB,MAAMC,OAAO,GAACD,MAAM,CAACE,OAAO;MAC5B,MAAMC,YAAY,GAACJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAGL,OAAO,CAACK,EAAE,CAAC;MAC/DP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAG,CAACO,YAAY,EAAC;QACbJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UAACD,EAAE,EAACL,OAAO,CAACK,EAAE;UAACE,KAAK,EAACP,OAAO,CAACO,KAAK;UAACC,QAAQ,EAAC,CAAC;UAACC,UAAU,EAACT,OAAO,CAACO,KAAK;UAACf,IAAI,EAACQ,OAAO,CAACU;QAAK,CAAC,CAAC;MAChH,CAAC,MAAI;QACDR,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAACP,YAAY,CAACO,UAAU,GAACT,OAAO,CAACO,KAAK;MACjE;IACJ,CAAC;IACDI,kBAAkBA,CAACb,KAAK,EAACC,MAAM,EAAC;MAC5B,MAAMM,EAAE,GAACN,MAAM,CAACE,OAAO;MACvB,MAAMC,YAAY,GAACJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAGA,EAAE,CAAC;MACvDP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAGO,YAAY,CAACM,QAAQ,KAAG,CAAC,EAAC;QACzBV,KAAK,CAACJ,KAAK,GAACI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAEA,IAAI,CAACC,EAAE,KAAGA,EAAE,CAAC;MACtD,CAAC,MACG;QACAH,YAAY,CAACM,QAAQ,EAAE;QACvBN,YAAY,CAACO,UAAU,GAACP,YAAY,CAACO,UAAU,GAACP,YAAY,CAACK,KAAK;MACtE;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,MAAMM,YAAY,GAAEC,QAAQ,IAAG;EAC3B,OAAQC,QAAQ,IAAG;IACfA,QAAQ,CACJA,QAAQ,CAACC,SAAS,CAACC,gBAAgB,CAAC;MAChCC,MAAM,EAAC,SAAS;MAChBR,KAAK,EAAC,YAAY;MAClBS,OAAO,EAAC;IACV,CAAC,CAAC,CAAC,CACR;EACL,CAAC;AACL,CAAC;AACD,OAAO,MAAMC,WAAW,GAAC7B,SAAS,CAAC8B,OAAO;AAC1C,eAAe9B,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}